---
export interface Props {
  repo: string;
  issueTerm?: 'pathname' | 'url' | 'title' | 'og:title';
  label?: string;
}

const {
  repo,
  issueTerm = 'pathname',
  label = ''
} = Astro.props;
---

<section id="comments" class="mt-16">
  <div class="max-w-5xl mx-auto">
    <div id="giscus-container"></div>
  </div>
</section>

<style>
  #giscus-container :global(.giscus) {
    max-width: 100% !important;
  }
  
  #giscus-container :global(.giscus-frame) {
    width: 100% !important;
    max-width: 100% !important;
  }
</style>

<script is:inline>
(function() {
  let giscusLoaded = false;
  let currentTheme = null;
  
  function getThemePreference() {
    const savedTheme = localStorage.getItem("theme");
    if (savedTheme) {
      return savedTheme;
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  }
  
  function getGiscusTheme(theme) {
    return theme === 'dark' ? 'dark' : 'light';
  }
  
  function loadGiscus() {
    const container = document.getElementById('giscus-container');
    if (!container) return;
    
    const theme = getThemePreference();
    const giscusTheme = getGiscusTheme(theme);
    
    // Clear existing giscus
    container.innerHTML = '';
    
    const script = document.createElement('script');
    script.src = 'https://giscus.app/client.js';
    script.setAttribute('data-repo', 'peteretelej/peteretelej.github.io');
    script.setAttribute('data-repo-id', 'MDEwOlJlcG9zaXRvcnk1MjYwODE1OA==');
    script.setAttribute('data-category', 'General');
    script.setAttribute('data-category-id', 'DIC_kwDOAyK8ns4CuYpf');
    script.setAttribute('data-mapping', 'pathname');
    script.setAttribute('data-strict', '0');
    script.setAttribute('data-reactions-enabled', '1');
    script.setAttribute('data-emit-metadata', '0');
    script.setAttribute('data-input-position', 'bottom');
    script.setAttribute('data-theme', giscusTheme);
    script.setAttribute('data-lang', 'en');
    script.setAttribute('crossorigin', 'anonymous');
    script.async = true;
    
    container.appendChild(script);
    
    currentTheme = theme;
    giscusLoaded = true;
  }
  
  function updateGiscusTheme() {
    const theme = getThemePreference();
    if (theme === currentTheme) return;
    
    const giscusFrame = document.querySelector('iframe.giscus-frame');
    if (giscusFrame) {
      const giscusTheme = getGiscusTheme(theme);
      giscusFrame.contentWindow.postMessage(
        { giscus: { setConfig: { theme: giscusTheme } } },
        'https://giscus.app'
      );
      currentTheme = theme;
    }
  }
  
  // Listen for theme changes
  function observeThemeChanges() {
    const root = document.documentElement;
    const observer = new MutationObserver(function(mutations) {
      mutations.forEach(function(mutation) {
        if (mutation.type === 'attributes' && mutation.attributeName === 'data-theme') {
          updateGiscusTheme();
        }
      });
    });
    
    observer.observe(root, {
      attributes: true,
      attributeFilter: ['data-theme']
    });
  }
  
  // Load giscus when page loads
  function initGiscus() {
    loadGiscus();
    observeThemeChanges();
  }
  
  // Initialize on page load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initGiscus);
  } else {
    initGiscus();
  }
  
  // Re-initialize on view transitions
  document.addEventListener('astro:page-load', initGiscus);
})();
</script>