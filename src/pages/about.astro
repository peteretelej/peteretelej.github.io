---
import Base from "../layouts/Base.astro";
import FormattedDate from "../components/FormattedDate.astro";
import {
  fetchGitHubProfile,
  fetchGitHubRepos,
  fetchGitHubReadme,
  fetchGitHubStars,
} from "../utils/github.ts";
import { socialLinks } from "../data/socials.ts";
import { featuredProjects } from "../data/projects.ts";
import { getCollection } from "astro:content";

const username = "peteretelej";
const profile = await fetchGitHubProfile(username);
const repos = await fetchGitHubRepos(username);
const readme = await fetchGitHubReadme(username);
const stars = await fetchGitHubStars(username);

// Get recent posts
const readmePosts = await getCollection("readme");
const notes = await getCollection("notes");
const recentReadme = readmePosts
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 3);
const recentNotes = notes
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 3);

const profileImageUrl =
  profile?.avatar_url || "/images/etelej_avatar_small.png";
const displayName = profile?.name || "Peter Etelej";
const bio = profile?.bio || "Software Developer & Technical Writer";
const location = profile?.location || "";
const company = profile?.company || "";
const publicRepos = profile?.public_repos || 0;
---

<Base
  title="About Peter Etelej"
  description="Software developer and technical writer"
>
  <div class="max-w-6xl mx-auto px-6 py-12">
    <!-- Compact Header with Profile -->
    <div
      class="flex flex-col sm:flex-row items-start gap-6 mb-12 pb-8 border-b border-gray-200 dark:border-gray-700"
    >
      <img
        src={profileImageUrl}
        alt={displayName}
        class="w-20 h-20 rounded-full border-2 border-gray-200 dark:border-gray-700"
      />
      <div class="flex-1">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">
          {displayName}
        </h1>
        <p class="text-gray-600 dark:text-gray-400 mb-4">{bio}</p>
        <div
          class="flex flex-wrap items-center gap-4 text-sm text-gray-500 dark:text-gray-400 mb-4"
        >
          {location && <span>üìç {location}</span>}
          {company && <span>üè¢ {company}</span>}
          <span>üìÅ {publicRepos} repositories</span>
        </div>
        <div class="flex gap-3">
          {
            socialLinks.map((social) => (
              <a
                href={social.url}
                target="_blank"
                class={`inline-flex items-center p-2 ${social.color} ${social.textColor || "text-white"} rounded-lg ${social.hoverColor} transition-colors`}
                title={social.name}
              >
                <Fragment set:html={social.icon} />
              </a>
            ))
          }
        </div>
      </div>
    </div>

    <!-- Main Content Grid -->
    <div class="grid lg:grid-cols-3 gap-8">
      <!-- Main Content -->
      <div class="lg:col-span-2 space-y-8">
        <!-- GitHub README -->
        {
          readme && (
            <section>
              <div class="prose dark:prose-invert max-w-none">
                <div
                  set:html={readme.replace(/^# .+$/m, "").trim()}
                  class="text-gray-700 dark:text-gray-300"
                />
              </div>
            </section>
          )
        }

        <!-- Site Intro -->
        <section>
          <p
            class="text-lg text-gray-700 dark:text-gray-300 leading-relaxed mb-8"
          >
            This is my GitHub.io blog where I write about tools, topics and
            projects I've been hacking on.
          </p>
        </section>

        <!-- Recent Posts -->
        <section>
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
            Recent Posts
          </h2>
          <div class="grid sm:grid-cols-2 gap-6">
            <!-- README Posts -->
            <div>
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                  README
                </h3>
                <a
                  href="/readme/"
                  class="text-brand-600 dark:text-brand-400 hover:text-brand-700 dark:hover:text-brand-300 text-sm font-medium"
                >
                  View all ‚Üí
                </a>
              </div>
              <div class="space-y-3">
                {
                  recentReadme.map((post) => (
                    <a
                      href={`/readme/${post.id}/`}
                      class="block p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
                    >
                      <h4 class="font-medium text-gray-900 dark:text-white text-sm mb-1">
                        {post.data.title}
                      </h4>
                      <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                        <FormattedDate date={post.data.publishDate} />
                        {post.data.tags && (
                          <span class="px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded">
                            {post.data.tags[0]}
                          </span>
                        )}
                      </div>
                    </a>
                  ))
                }
              </div>
            </div>

            <!-- Notes -->
            <div>
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                  Notes
                </h3>
                <a
                  href="/notes/"
                  class="text-brand-600 dark:text-brand-400 hover:text-brand-700 dark:hover:text-brand-300 text-sm font-medium"
                >
                  View all ‚Üí
                </a>
              </div>
              <div class="space-y-3">
                {
                  recentNotes.map((note) => (
                    <a
                      href={`/notes/${note.id}/`}
                      class="block p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
                    >
                      <h4 class="font-medium text-gray-900 dark:text-white text-sm mb-1">
                        {note.data.title}
                      </h4>
                      <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                        <FormattedDate date={note.data.publishDate} />
                        {note.data.tags && note.data.tags.length > 0 && (
                          <span class="px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded">
                            {note.data.tags[0]}
                          </span>
                        )}
                      </div>
                    </a>
                  ))
                }
              </div>
            </div>
          </div>
        </section>

        <!-- Featured Projects -->
        <section>
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
              Recent Apps / Projects
            </h2>
            <a
              href="https://etelej.com/#/portfolio"
              target="_blank"
              class="text-brand-600 dark:text-brand-400 hover:text-brand-700 dark:hover:text-brand-300 text-sm font-medium"
            >
              View all ‚Üí
            </a>
          </div>
          <div class="grid gap-8 sm:grid-cols-2">
            {
              featuredProjects.map((project) => (
                <div class="bg-gray-50 dark:bg-gray-800 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors overflow-hidden">
                  <div class="p-6">
                    <div class="mb-6">
                      <img
                        src={project.image}
                        alt={project.name}
                        class="w-full h-32 rounded-lg object-cover border border-gray-200 dark:border-gray-600 mb-4"
                      />
                      <div class="flex items-start justify-between gap-2 mb-3">
                        <h3 class="font-bold text-gray-900 dark:text-white text-xl leading-tight">
                          {project.name}
                        </h3>
                        <a
                          href={project.url}
                          target="_blank"
                          class="text-brand-600 dark:text-brand-400 hover:text-brand-700 dark:hover:text-brand-300 flex-shrink-0 mt-1"
                        >
                          <svg
                            class="w-6 h-6"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                          >
                            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                            <polyline points="15,3 21,3 21,9" />
                            <line x1="10" y1="14" x2="21" y2="3" />
                          </svg>
                        </a>
                      </div>
                      <p class="text-gray-600 dark:text-gray-400 leading-relaxed mb-4">
                        {project.description}
                      </p>
                    </div>
                    <div class="flex flex-wrap gap-2">
                      {project.technologies.map((tech) => (
                        <span class="px-3 py-1 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-xs rounded-full">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
        </section>
      </div>

      <!-- Sidebar -->
      <div class="space-y-6">
        <!-- GitHub Activity -->
        <div class="bg-gray-50 dark:bg-gray-800 p-6 rounded-lg">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
            My Github Activity
          </h3>

          {
            repos.length > 0 && (
              <div class="mb-6">
                <h4 class="font-medium text-gray-900 dark:text-white mb-3">
                  Recent Repos
                </h4>
                <div class="space-y-3">
                  {repos.slice(0, 7).map((repo) => (
                    <a
                      href={repo.html_url}
                      target="_blank"
                      class="block p-3 bg-white dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 hover:border-brand-300 dark:hover:border-brand-600 transition-colors"
                    >
                      <div class="font-medium text-gray-900 dark:text-white text-sm">
                        {username}/{repo.name}
                      </div>
                      {repo.description && (
                        <div class="text-xs text-gray-600 dark:text-gray-400 mt-1 line-clamp-2">
                          {repo.description}
                        </div>
                      )}
                      {repo.language && (
                        <div class="text-xs text-brand-600 dark:text-brand-400 mt-2">
                          {repo.language}
                        </div>
                      )}
                    </a>
                  ))}
                </div>
              </div>
            )
          }

          {
            (() => {
              const filteredStars = stars.filter(
                (star) => star.owner.login !== username
              );
              return (
                filteredStars.length > 0 && (
                  <div>
                    <h4 class="font-medium text-gray-900 dark:text-white mb-3">
                      Recently Starred
                    </h4>
                    <div class="space-y-2">
                      {filteredStars.slice(0, 5).map((star) => (
                        <a
                          href={star.html_url}
                          target="_blank"
                          class="block p-3 bg-white dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600 hover:border-brand-300 dark:hover:border-brand-600 transition-colors"
                        >
                          <div class="flex items-center justify-between mb-1">
                            <div class="font-medium text-gray-900 dark:text-white text-sm">
                              {star.owner.login}/{star.name}
                            </div>
                            <div class="flex items-center text-xs text-gray-500">
                              <svg
                                class="w-3 h-3 mr-1"
                                fill="currentColor"
                                viewBox="0 0 20 20"
                              >
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                              </svg>
                              {star.stargazers_count}
                            </div>
                          </div>
                          {star.description && (
                            <div class="text-xs text-gray-600 dark:text-gray-400 line-clamp-2">
                              {star.description}
                            </div>
                          )}
                          {star.language && (
                            <div class="text-xs text-brand-600 dark:text-brand-400 mt-1">
                              {star.language}
                            </div>
                          )}
                        </a>
                      ))}
                    </div>
                  </div>
                )
              );
            })()
          }
        </div>
      </div>
    </div>
  </div>
</Base>
