---
import { getCollection } from "astro:content";
import Base from "../../layouts/Base.astro";
import FormattedDate from "../../components/FormattedDate.astro";

const posts = await getCollection("readme", ({ data }) => {
  // Show drafts in development, hide in production
  return import.meta.env.DEV ? true : data.draft !== true;
});
const sortedPosts = posts.sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);
---

<Base title="README Posts" description="All technical posts and guides">
  <div class="max-w-6xl mx-auto px-6 py-16">
    <!-- Header -->
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        README Posts
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl">
        Technical documentation, tutorials, and guides on programming, system
        administration, and web development.
      </p>
    </header>

    <!-- Posts List -->
    <div class="space-y-8">
      {
        sortedPosts.map((post) => (
          <article class="bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-lg dark:shadow-gray-900/10 dark:hover:shadow-gray-900/20 p-6 transition-all duration-300 hover:-translate-y-1">
            <div class="flex items-start space-x-4">
              {post.data.thumbnail && (
                <div class="flex-shrink-0 w-20 h-20 overflow-hidden rounded">
                  <img
                    src={post.data.thumbnail}
                    alt=""
                    class="w-full h-full object-cover"
                  />
                </div>
              )}

              <div class="flex-1">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                  <a
                    href={`/readme/${post.id}`}
                    class="hover:text-brand-600 dark:hover:text-brand-400 transition-colors duration-300 hover:underline decoration-2 underline-offset-2"
                  >
                    {post.data.title}
                  </a>
                </h2>

                {post.data.subtitle && (
                  <p class="text-gray-600 dark:text-gray-400 mb-4">
                    {post.data.subtitle}
                  </p>
                )}

                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400">
                    <FormattedDate date={post.data.publishDate} />
                  </div>

                  {post.data.tags && (
                    <div class="flex flex-wrap gap-2">
                      {post.data.tags.map((tag) => (
                        <span class="bg-brand-100 dark:bg-brand-900/50 text-brand-700 dark:text-brand-300 px-3 py-1 rounded-full text-xs font-medium hover:bg-brand-200 dark:hover:bg-brand-800/50 transition-colors duration-200 cursor-pointer">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </div>
          </article>
        ))
      }
    </div>
  </div>
</Base>
