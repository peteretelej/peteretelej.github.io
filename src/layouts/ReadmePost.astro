---
import type { CollectionEntry } from "astro:content";
import Base from "./Base.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Comments from "../components/Comments.astro";
import "../styles/readme.css";

type Props = CollectionEntry<"readme">["data"];

const { title, subtitle, publishDate, updatedDate, tags, thumbnail } = Astro.props;
---

<Base title={title} description={subtitle || title}>
  <article>
    <!-- Hero Section with gradient background -->
    <div
      class="bg-gradient-to-br from-blue-600 via-blue-700 to-blue-900 dark:bg-gradient-to-br dark:from-gray-800 dark:to-gray-700 text-white py-16 px-6"
    >
      <div class="max-w-7xl mx-auto">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">{title}</h1>
        {
          subtitle && (
            <div class="flex items-start gap-3 mb-6">
              <p class="text-xl md:text-2xl text-blue-100 dark:text-gray-200">
                {subtitle}
              </p>
              {thumbnail && (
                <img
                  src={thumbnail}
                  alt=""
                  class="w-8 h-8 rounded mt-1 flex-shrink-0"
                />
              )}
            </div>
          )
        }
      </div>
    </div>

    <!-- Content Section -->
    <div class="max-w-7xl mx-auto px-6 py-12 bg-white dark:bg-gray-800">
      <!-- Article Content -->
      <div class="prose prose-xl dark:prose-invert max-w-5xl mx-auto readme-content">
        <slot />
      </div>

      <!-- Article Metadata -->
      <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
        <div
          class="flex flex-wrap items-center gap-4 text-sm text-gray-600 dark:text-gray-400"
        >
          <FormattedDate date={publishDate} />
          {updatedDate && (
            <>
              <span>&middot;</span>
              <span>Updated: <FormattedDate date={updatedDate} /></span>
            </>
          )}
          {
            tags && tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {tags.map((tag) => (
                  <span class="bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-xs">
                    {tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
      </div>

      <!-- Comments -->
      <Comments repo="peteretelej/peteretelej.github.io" />
    </div>
  </article>
</Base>
